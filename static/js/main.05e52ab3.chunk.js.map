{"version":3,"sources":["component/Card.js","component/Cardlist.js","component/SearchBox.js","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","Cardlist","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","state","searchTerm","fetch","then","response","json","data","setState","this","filterMonsters","filter","toLowerCase","includes","e","target","value","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uTAGe,SAASA,EAAKC,GACzB,OACI,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BACtB,6BAAKL,EAAMI,QAAQE,OACnB,4BAAIN,EAAMI,QAAQG,WCJf,SAASC,EAASR,GAC7B,OACI,qBAAKC,UAAU,YAAf,SACOD,EAAMS,SAASC,KAAI,SAAAN,GAAO,OAC5B,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,S,MCCjBM,MANf,YAAgD,IAA5BC,EAA2B,EAA3BA,YAAYC,EAAe,EAAfA,aAC5B,OACI,uBAAOZ,UAAU,SAASa,KAAK,SAASF,YAAaA,EAAaG,SAAUF,KC6BrEG,E,kDA5Bb,aAAc,IAAD,8BACX,gBACKC,MAAM,CACTR,SAAU,GACVS,WAAY,IAJH,E,gEAOO,IAAD,OACjBC,MAAM,8CACJC,MAAK,SAAAC,GAAQ,OAAEA,EAASC,UACxBF,MAAK,SAAAG,GAAI,OAAE,EAAKC,SAAS,CAACf,SAASc,S,+BAE9B,IAAD,SACqBE,KAAKR,MAA1BR,EADA,EACAA,SAASS,EADT,EACSA,WACVQ,EAAejB,EAASkB,QAAO,SAAAvB,GAAO,OAAEA,EAAQE,KAAKsB,cAAcC,SAASX,EAAWU,kBAE5F,OACE,sBAAK3B,UAAU,MAAf,UACE,kDACE,cAAC,EAAD,CAAWW,YAAY,sBAAsBC,aAAc,SAAAiB,GAAC,OAC1D,EAAKN,SAAS,CAACN,WAAaY,EAAEC,OAAOC,WACzC,cAAC,EAAD,CAAUvB,SAAUiB,W,GAtBVO,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.05e52ab3.chunk.js","sourcesContent":["import React from 'react';\r\nimport '../css/Card.css';\r\n\r\nexport default function Card(props) {\r\n    return (\r\n        <div className='card-container'>\r\n            <img alt='monster' src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`}/>\r\n            <h2>{props.monster.name}</h2>\r\n            <p>{props.monster.email}</p>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport '../css/Cardlist.css';\r\nimport Card from './Card.js';\r\n\r\nexport default function Cardlist(props) {\r\n    return (\r\n        <div className='card-list'>\r\n             { props.monsters.map(monster=>(\r\n             <Card key={monster.id} monster={monster}/>\r\n        ))}\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport '../css/SearchBox.css';\r\n\r\nfunction SearchBox({placeholder,handleChange}) {\r\n    return (\r\n        <input className=\"search\" type=\"search\" placeholder={placeholder} onChange={handleChange}/>\r\n    )\r\n}\r\n\r\nexport default SearchBox\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport Cardlist from './component/Cardlist.js';\nimport SearchBox from './component/SearchBox';\n\nclass App extends Component{\n  constructor(){\n    super();\n    this.state={\n      monsters: [],\n      searchTerm: ''\n    };\n  }\n  componentDidMount(){\n    fetch('https://jsonplaceholder.typicode.com/users')\n     .then(response=>response.json())\n     .then(data=>this.setState({monsters:data}));\n  }\n  render(){\n   const {monsters,searchTerm}=this.state;\n   const filterMonsters=monsters.filter(monster=>monster.name.toLowerCase().includes(searchTerm.toLowerCase()));\n\n    return( \n      <div className=\"App\">\n        <h1>Monsters Rolodex</h1>\n          <SearchBox placeholder=\"search for monsters\" handleChange={e =>\n            this.setState({searchTerm : e.target.value})} />\n        <Cardlist monsters={filterMonsters}/> \n    </div>\n    );\n  }\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}